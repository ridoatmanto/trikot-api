generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           String         @id @default(cuid())
  name         String         @unique @db.VarChar(255)
  imageURL     String         @db.VarChar(255)
  slug         String         @unique @db.VarChar(255)
  price        BigInt
  description  String         @db.Text
  sku          String         @unique // code for scanning product
  cartItems    CartItem[]
  ProductStock ProductStock[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id     String     @id @default(cuid())
  user   User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  items  CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String  @id @default(cuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int     @default(1)
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductStock {
  id        String  @id @default(cuid())
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  stock     Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  password Password?
  carts    Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id     String @id @default(cuid())
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
